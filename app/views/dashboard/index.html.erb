<!DOCTYPE html>
<html>

  <body class="bg-[#FFF5E8] flex flex-col h-screen overflow-hidden">
    <!-- ヘッダー -->
    <%= render "shared/header" %>
    
    <p style="color: green"><%= notice %></p>

    <!-- メインコンテンツ -->
    <main class="flex-grow p-4 flex flex-col md:flex-row">
      <h2 class="text-3xl mb-4">ダッシュボード</h2>

      <!-- 円グラフ -->
      <div class="flex-1 md:w-1/2 md:pr-3 flex justify-center items-center md:mt-8">
        <canvas id="goalChart" class="w-[300px] h-[300px] md:w-[400px] md:h-[400px]"></canvas>
      </div>

      <!-- ボタン -->
      <div class="flex-1 md:w-1/2 p-5 flex flex-col justify-center items-center md:items-start">
        <div class="flex flex-col space-y-4">
          <a href="goals" class="bg-white text-black text-xl flex items-center px-4 py-2 rounded shadow w-50">
            <i class="fas fa-tasks mr-2"></i>目標一覧
          </a>
          <a href="users/show" class="bg-white text-black text-xl flex items-center px-4 py-2 rounded shadow w-50">
            <i class="fas fa-user mr-2"></i>ユーザー情報
          </a>
        </div>
      </div>
    </main>

    <!-- フッター -->
    <%= render "shared/footer" %>
  </body>

  <!-- Font AwesomeのCDNを読み込む -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

  <!-- Chart.jsのCDNを読み込む -->
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script>
    // 達成した目標数と全目標数
    const achievedGoals = <%= @achieved_goals %>; // 達成数  
    const unachievedGoals = <%= @unachieved_goals %>; // 未達成数  
    const totalGoals = 100; // 登録可能数
    const registeredGoals = <%= @registered_goals %>; // 全目標数
    const unregisteredGoals = 100 - registeredGoals; // 未登録数

    const ctx = document.getElementById('goalChart').getContext('2d');
    const goalChart = new Chart(ctx, {
      type: 'doughnut', // 円グラフの種類
      data: {
        labels: ['達成', '未達成', '未登録'],
        datasets: [{
          label: '目標達成状況',
          data: [achievedGoals, unachievedGoals, unregisteredGoals], // データ配列（達成率、未達成率）
          backgroundColor: ['#FFA500', '#A9A9A9', '#E3E3E3'], // オレンジ、濃いグレー、薄いグレー
          borderWidth: 1
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
          tooltip: {
            enabled: false // ツールチップを無効にする
          }
        }    
      },
      plugins: [{
        beforeDraw: function(chart) {
          const ctx = chart.ctx;
          const x = chart.width / 2;
          const y = chart.height / 2;
          ctx.restore();

          ctx.clearRect(0, 0, chart.width, chart.height); // クリア

          ctx.restore();

          // フォントサイズを計算する関数
        function calculateFontSize(radius, divisor) {
          return (radius / divisor).toFixed(2) + "px Arial";
        }

        // 達成した目標数のフォントサイズ
        ctx.font = calculateFontSize(chart.innerRadius, 1.5);
        ctx.textBaseline = "middle";
        ctx.fillStyle = "#000"; // テキストの色
        ctx.fillText(achievedGoals, x, y - 10); // 数字の位置調整
        
        // '/100'のフォントサイズを別に設定
        ctx.font = calculateFontSize(chart.innerRadius, 2); // サイズを変える
        ctx.fillText('/' + totalGoals, x, y + 10); // '/100'の位置調整
        
        ctx.save();
        }
      }]
    });

    document.getElementById('updateButton').addEventListener('click', updateChart);

    function updateChart() {
      // 新しいデータを取得するロジック
      const newAchievedGoals = Math.floor(Math.random() * 100); 
      const newPercentage = newAchievedGoals / totalGoals * 100;

      goalChart.data.datasets[0].data = [newPercentage, 100 - newPercentage];
      goalChart.update();
    }
  </script>


</html>
